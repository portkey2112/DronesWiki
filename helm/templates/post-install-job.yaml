apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      volumes:
        - name: init-scripts
          configMap:
            name: init-scripts-cfg-map
            defaultMode: 0777
            items:
              - key: setup.sql
                path: setup.sql
              - key: wait-for-it.sh
                path: wait-for-it.sh
      initContainers:
        - name: mysql-listener
          image: alpine
          imagePullPolicy: IfNotPresent
          command: [ "sh", "-c", "for i in $(seq 1 200); do nc -zv -w5  {{ .Values.mysql.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local {{ .Values.mysql.primary.service.port }} && exit 0 || sleep 1; done; exit 1"]
      containers:
        - name: db-setup
          image: 'docker.io/bitnami/mysql:8.0'
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "mysql -h{{ .Values.mysql.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local -u{{ .Values.mysql.auth.username }} -p{{ .Values.mysql.auth.password }} < /home/worker/scripts/setup.sql"]
          volumeMounts:
            - mountPath: /home/worker/scripts
              name: init-scripts