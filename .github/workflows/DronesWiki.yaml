name: DronesWiki

on:
  push:
    branches:
      - devops
  pull_request:
    branches:
      - devops
env:
  HELM_DIR: drone-chart
  HELM_RELEASE: drone-helm-app
  CONTAINER_PORT: 8080



jobs:
  build:
    if: github.repository == 'portkey2112/DronesWiki'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        id: setup-java
        uses: actions/setup-java@v1
        with:
            java-version: 11
            distribution: 'temurin'
            cache: maven

      - name: Build with Maven
        id: build-application
        run: |
          cd $GITHUB_WORKSPACE
          ./mvnw clean package -DskipTests -Dassembly.skipAssembly=true
          
#      - name: Run Docker image
#        id: build-container
#        run: docker-compose up -d

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        run: |
          kind create cluster

      - name: Build and load image
        id: build-load-docker-image
        run: |
          docker build -t drone-details:v1 .
          kind load docker-image drone-details:v1

      - name: Set up Helm
        id: setup-helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Deploy
        id: deploy-using-helm
        run: |
          helm install -f SHELM_DIR/values.yaml $HELM_RELEASE $HELM_DIR

      - name: Port-forward
        id: port-forward
        run: |
          export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=$HELM_DIR,app.kubernetes.io/instance=HELM_RELEASE" -o jsonpath="{.items[0].metadata.name}")
          export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
          kubectl port-forward $POD_NAME 8080:$CONTAINER_PORT

      - name: Run Postman tests
        id: postman-test
        run: |
          sleep 60
          cd $GITHUB_WORKSPACE
          newman run ./scripts/test/DronesWiki.postman_collection.json
